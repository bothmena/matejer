imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration

framework:
    esi: { enabled: true }
    translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:  ['matejer.local', 'support.matejer.local', 'seller.matejer.local', 'admin.matejer.local']
    trusted_proxies:  [192.0.0.1, 10.0.0.0/8]
    session:
        # handler_id set to null will use default session handler from php.ini
        # cookie_lifetime: 1200 #3600
        name: "%session_name%"
        cookie_domain: .matejer.local
        handler_id:  ~
        metadata_update_threshold: 80
    fragments:       ~
    http_method_override: true
    
sensio_framework_extra:
    router:      { annotations: true }
    request:     { converters: true, auto_convert: true }
    view:        { annotations: true }
    cache:       { annotations: true }
    security:    { annotations: true }
    psr_message: { enabled: false }

fos_http_cache:
    proxy_client:
        default: varnish
        varnish:
            servers:  127.0.0.1:6081
            base_url: matejer.local
    tags:
        enabled: true
    user_context:
        enabled: true
        role_provider: true
        hash_cache_ttl: 120
        user_identifier_headers:
            - Cookie
    cache_control:
        defaults:
            overwrite: true
        rules:
            -
                match:
                    attributes:
                        _route: ^abo_user_(registration|resetting|security|change)_*
                headers:
                    cache_control: { no_cache: true }
                    vary: [Accept-Encoding, Accept-Language]
            -
                match:
                    attributes:
                        _route: ^abo_shop_*
                headers:
                    cache_control: { public: false, max_age: 360, s_maxage: 360 }
                    etag: true
                    vary: [Accept-Encoding, Accept-Language]
            -
                match:
                    attributes:
                        _route: ^abo_user_(profile|product|shop)_*
                headers:
                    cache_control: { public: false, max_age: 900, s_maxage: 900 }
                    etag: true
                    vary: [Accept-Encoding, Accept-Language]
            -
                match:
                    attributes:
                        _route: ^_assetic_*
                headers:
                    cache_control: { public: true, max_age: 86400, s_maxage: 86400 }
                    vary: [Accept-Encoding]
            -
                match:
                    path: ^/
                headers:
                    overwrite: false
                    cache_control: { public: true, max_age: 420, s_maxage: 420 }
                    vary: [Accept-Encoding, Accept-Language]
                    etag: true
# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    globals:
        fb_profile: https://www.facebook.com/matejer-official
        gp_profile: https://plus.google.com/Matejer/posts
        in_profile: https://www.linkedin.com/company/matejer
        tw_profile: https://twitter.com/matejer-official
        yt_profile: https://www.youtube.com/user/Matejer
        fb_app_id: '%facebook_app_id%'
        tw_handle: 'matejer-official'
# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    read_from:            "%kernel.root_dir%/../web"
    write_to:             "%kernel.root_dir%/../web"
    bundles:
        [ABOMainBundle,ABOShopBundle,ABOAdminBundle,ABOTrademarkBundle,ABOUserBundle,FOSUserBundle,ABOSupportBundle]
    filters:
        cssrewrite: ~
# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        server_version: 5.6
    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true
        metadata_cache_driver: memcache #memcache , array
        query_cache_driver: memcache
        result_cache_driver: memcache
        second_level_cache:
            region_cache_driver: memcache
            region_lock_lifetime: 60
            enabled:              true
        mappings:
            gedmo_translatable:
                type: annotation
                prefix: Gedmo\Translatable\Entity
                dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Translatable/Entity"
                alias: GedmoTranslatable # (optional) it will default to the name set for the mapping
                is_bundle: false
# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    username:  "%support_email%"
    password:  "%support_email_password%"
    spool:
        type: file
        path: "%mailer_spoil_path%"
#hwioauth config
hwi_oauth:
    #this is my custom user provider, created from FOSUBUserProvider - will manage the 
    #automatic user registration on your site, with data from the provider (facebook. google, etc.)
    #and also, the connecting part (get the token and the user_id)
    connect:
        account_connector: my_user_provider
    # name of the firewall in which this bundle is active, this setting MUST be set
    firewall_names: 
        - main
    fosub:
        username_iterations: 30
        properties:
            # these properties will be used/redefined later in the custom FOSUBUserProvider service.
            facebook: facebook_id
            google: google_id
    resource_owners:
        facebook:
            type:                facebook
            client_id:           "%facebook_app_id%"
            client_secret:       "%facebook_app_secret%"
            scope:               "email"
        google:
            type:                google
            client_id:           "%google_app_id%"
            client_secret:       "%google_app_secret%"
            scope:               "https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/userinfo.profile"
    # here you will add one (or more) configurations for resource owners
#fosuser Configuration
fos_user:
    db_driver: orm # other valid values are 'mongodb', 'couchdb' and 'propel'
    firewall_name: main
    user_class: ABO\UserBundle\Entity\User
    from_email:
        address:        "%support_email%"
        sender_name:    Matejer Administration
    profile:
        form:
            type:               fos_user_profile
            name:               fos_user_profile_form
            validation_groups:  [Profile, Default]
    change_password:
        form:
            type:               fos_user_change_password
            name:               fos_user_change_password_form
            validation_groups:  [ChangePassword, Default]
    registration:
        form:
            type:               abo_user_registration
            name:               abo_user_registration
            validation_groups:  [Default, abo_user]
    resetting:
        token_ttl: 86400
        email:
    #        from_email: # Use this node only if you don't want the global email address for the resetting email
    #            address:        ...
    #            sender_name:    ...
            template:   FOSUserBundle:Resetting:email.txt.twig
        form:
            type:               fos_user_resetting
            name:               fos_user_resetting_form
            validation_groups:  [ResetPassword, Default]
    service:
        mailer:                 fos_user.mailer.twig_swift
        email_canonicalizer:    fos_user.util.canonicalizer.default
        username_canonicalizer: fos_user.util.canonicalizer.default
        token_generator:        fos_user.util.token_generator.default
        user_manager:           fos_user.user_manager.default
#stof_doctrine_extensions
stof_doctrine_extensions:
    default_locale: "%locale%"
    translation_fallback: true
    orm:
        default: 
            translatable: true
            sluggable: true

#liip_imagine
liip_imagine:
    resolvers:
       default:
            web_path: ~
    filter_sets:
        cache: ~
        dash_logo: #logo tm/shop/ photo de profil in dashboard
            quality: 100
            filters:
                thumbnail: { size: [230, 200], mode: outbound }
        icon_logo: #logo site in header & dashHeader
            quality: 100
            filters:
                thumbnail: { size: [30, 30], mode: outbound }
        clothegs: #clothes care icons
            quality: 100
            filters:
                thumbnail: { size: [32, 32], mode: inset }
        avatar: #photo de profil user in dropdown menu in dashboard header
            quality: 100
            filters:
                thumbnail: { size: [120, 120], mode: outbound }
        gallery_thumb: #thumbnail prod/offer in gallery page
            quality: 100
            filters:
                thumbnail: { size: [344, 260], mode: inset }
        m_gallery_thumb: #thumbnail shop/tm in gallery page
            quality: 100
            filters:
                relative_resize: { heighten: 120 }
        prod_modal: #carousel productInfoModal / image prod productShopFormModal
            quality: 100
            filters:
                thumbnail: { size: [600, 450], mode: inset }
        prod_profile: #all product/offer/shop/tm in user/shop/tm profile
            quality: 100
            filters:
                thumbnail: { size: [330, 150], mode: inset }
        mid_size: # features
            quality: 100
            filters:
                thumbnail: { size: [400, 200], mode: inset }
        mini_cover: #shopImageFormModal
            quality: 100
            filters:
                thumbnail: { size: [180, 90], mode: inset }
        cover: #shop home
            quality: 100
            filters:
                relative_resize: { heighten: 350 }
        prod_gallery: #carousel productGalleryModal galleryModal
            quality: 100
            filters:
                thumbnail: { size: [890, 420], mode: inset }
# relative_resize: { widen: 230 } | { heighten: 200 }
# thumbnail: { size: [230, 200], mode: inset } | { size: [230, 200], mode: outbound }
#knp_paginator
knp_paginator:
    page_range: 5                       # default page range used in pagination control
    default_options:
        page_name: page                 # page query parameter name
        sort_field_name: sort           # sort field query parameter name
        sort_direction_name: direction  # sort direction query parameter name
        distinct: true                   # ensure distinct results, useful when ORM queries are using GROUP BY statements
    template:
        pagination: KnpPaginatorBundle:Pagination:sliding.html.twig  
        #KnpPaginatorBundle:Pagination:twitter_bootstrap_v3_pagination.html.twig     
        # sliding pagination controls template
        sortable: KnpPaginatorBundle:Pagination:sortable_link.html.twig                         
        # sort link template

