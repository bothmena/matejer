<?php

namespace ABO\MainBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ProductsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RatingShopRepository extends EntityRepository{
    
    /*
     * User:Profile:show
     */
    public function userShopsRtNb($user) {
        $qb = $this->createQueryBuilder('rs')
            ->addSelect('rs')
            ->select('COUNT(rs)')
            ->where('rs.user = :user')
            ->setParameter('user', $user);

        return $qb->getQuery()->getSingleScalarResult();
    }
    /*
     * User:Product:reviews
     */
    public function userReviews($user) {
        $qb = $this->createQueryBuilder('rs')
            ->addSelect('rs')
            ->join('rs.rate', 'r')
            ->addSelect('r')
            ->join('rs.shop', 's')
            ->addSelect('s')
            ->where('rs.user = :user')
            ->setParameter('user', $user);

        return $qb->getQuery();
    }
    
    /*
     * Shop:Show:homeadmin, home
     */
    public function getLastReviews($shop,$mr){
        $qb = $this->_em->createQueryBuilder();
        $qb->select('rs')
            ->from('ABOMainBundle:RatingShop', 'rs')
            ->join('rs.rate', 'r')
            ->addSelect('r')
            ->join('rs.user', 'u')
            ->addSelect('u')
            ->andWhere('rs.shop = :shop')
            ->orderBy('rs.date')
            ->setMaxResults($mr)
            ->setParameter('shop', $shop);
        
        return $qb->getQuery()->getResult();
    }
    /*
     * Shop:Show:homeadmin, home
     */
    public function getShopReviewsNb($shop) {
        $qb = $this->createQueryBuilder('rs')
            ->addSelect('rs')
            ->select('COUNT(rs)')
            ->where('rs.shop = :shop')
            ->setParameter('shop', $shop);

        return $qb->getQuery()->getSingleScalarResult();
    }
    
    /*
     * Shop:Show:reviews
     */
    public function getUserShopReview($shop,$user){
        
        $parameters = array('shop'=>$shop,'user'=>$user);
        
        $qb = $this->_em->createQueryBuilder();
        $qb->select('rs')
            ->from('ABOMainBundle:RatingShop', 'rs')
            ->join('rs.rate', 'r')
            ->addSelect('r')
            ->join('rs.user', 'u')
            ->addSelect('u')
            ->andWhere('rs.shop = :shop')
            ->andWhere('rs.user = :user')
            ->setParameters($parameters);
        
        return $qb->getQuery()->getOneOrNullResult();
    }
    
    /*
     * Shop:Show:reviews
     */
    public function getShopReviewsUser($shop,$user){
        
        $parameters = array('shop'=>$shop,'user'=>$user);
        
        $qb = $this->_em->createQueryBuilder();
        $qb->select('rs')
            ->from('ABOMainBundle:RatingShop', 'rs')
            ->join('rs.rate', 'r')
            ->addSelect('r')
            ->join('rs.user', 'u')
            ->addSelect('u')
            ->andWhere('rs.shop = :shop')
            ->andWhere('rs.user != :user')
            ->orderBy('rs.date')
            ->setParameters($parameters);
        
        return $qb->getQuery();
    }
    
    /*
     * Shop:Show:reviews
     */
    public function getShopReviews($shop){
        
        $qb = $this->_em->createQueryBuilder();
        
        $qb->select('rs')
            ->from('ABOMainBundle:RatingShop', 'rs')
            ->join('rs.rate', 'r')
            ->addSelect('r')
            ->join('rs.user', 'u')
            ->addSelect('u')
            ->andWhere('rs.shop = :shop')
            ->orderBy('rs.date')
            ->setParameter('shop', $shop);
        
        return $qb->getQuery();
    }
}
