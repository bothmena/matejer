<?php

namespace ABO\MainBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Gedmo\Mapping\Annotation as Gedmo;
use Symfony\Component\Validator\Constraints as Assert;

/**
 * Place
 *
 * @ORM\Table()
 * @ORM\Entity(repositoryClass="ABO\MainBundle\Entity\PlaceRepository")
 */
class Place
{
    /**
     * @var integer
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;
    
    /**
     * @ORM\ManyToOne(targetEntity="ABO\MainBundle\Entity\Place")
     */
    private $parent;

    /**
     * @var string
     *
     * @ORM\Column(name="name", type="string", length=61)
     * @Assert\Length(
     *      min = 2,
     *      max = 60,
     *      minMessage = "Place name must be at least {{ limit }} characters long",
     *      maxMessage = "Place name cannot be longer than {{ limit }} characters",
     * )
     */
    private $name;

    /**
    * @Gedmo\Slug(fields={"name"})
    * @ORM\Column(length=80, unique=true)
    */
    private $slug;

    /**
     * @var string
     *
     * @ORM\Column(name="type", type="string", length=8)
     * @Assert\Choice(choices = {"state", "country", "city"}, message = "Choose a valid type.")
     */
    private $type;

    /**
     * @var integer
     *
     * @ORM\Column(name="phoneCode", type="smallint")
     */
    private $phoneCode;

    /**
     * @var integer
     *
     * @ORM\Column(name="format", type="string", length=20)
     */
    private $format;

    /**
     * @var integer
     *
     * @ORM\Column(name="regexFormat", type="string", length=120)
     */
    private $regexFormat;

    public function __construct() {
        
        $this->format = '';
        $this->regexFormat = '';
        $this->phoneCode = 0;
    }
    
    /**
     * Get id
     *
     * @return integer
     */
    public function getId() {
        
        return $this->id;
    }
    
    /**
     * Get translable
     *
     * @return integer
     */
    public function getTranslable() {
        
        return 'matejer_place.'.$this->slug;
    }

    /**
     * Set name
     *
     * @param string $name
     *
     * @return Place
     */
    public function setName($name)
    {
        $this->name = $name;

        return $this;
    }

    /**
     * Get name
     *
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Set slug
     *
     * @param string $slug
     *
     * @return Place
     */
    public function setSlug($slug)
    {
        $this->slug = $slug;

        return $this;
    }

    /**
     * Get slug
     *
     * @return string
     */
    public function getSlug()
    {
        return $this->slug;
    }

    /**
     * Set type
     *
     * @param string $type
     *
     * @return Place
     */
    public function setType($type)
    {
        $this->type = $type;

        return $this;
    }

    /**
     * Get type
     *
     * @return string
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * Set phoneCode
     *
     * @param integer $phoneCode
     *
     * @return Place
     */
    public function setPhoneCode($phoneCode)
    {
        $this->phoneCode = $phoneCode;

        return $this;
    }

    /**
     * Get phoneCode
     *
     * @return integer
     */
    public function getPhoneCode()
    {
        return $this->phoneCode;
    }

    /**
     * Set parent
     *
     * @param \ABO\MainBundle\Entity\Place $parent
     *
     * @return Place
     */
    public function setParent(\ABO\MainBundle\Entity\Place $parent = null)
    {
        $this->parent = $parent;

        return $this;
    }

    /**
     * Get parent
     *
     * @return \ABO\MainBundle\Entity\Place
     */
    public function getParent()
    {
        return $this->parent;
    }

    /**
     * Set format
     *
     * @param string $format
     *
     * @return Place
     */
    public function setFormat($format)
    {
        $this->format = $format;

        return $this;
    }

    /**
     * Get format
     *
     * @return string
     */
    public function getFormat()
    {
        return $this->format;
    }

    /**
     * Set regexFormat
     *
     * @param string $regexFormat
     *
     * @return Place
     */
    public function setRegexFormat($regexFormat)
    {
        $this->regexFormat = $regexFormat;

        return $this;
    }

    /**
     * Get regexFormat
     *
     * @return string
     */
    public function getRegexFormat()
    {
        return $this->regexFormat;
    }
}
